exposures: 
    raw: "%(field)s/%(dateObs)s/%(pointing)05d/%(filter)s/HSC-%(visit)07d-%(ccd)03d.fits"
    icExp: "%(pointing)05d/%(filter)s/corr/ICEXP-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    calexp: "%(pointing)05d/%(filter)s/corr/CORR-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    wcs: "jointcal-results/%(tract)04d/wcs-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    fcr: "jointcal-results/%(tract)04d/fcr-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    calibrated_exp: "%(pointing)05d/%(filter)s/corr/%(tract)04d/CALEXP-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    deepCoadd: "deepCoadd/%(filter)s/%(tract)d/%(patch)s/deepCoadd-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_nImage: "deepCoadd/%(filter)s/%(tract)d/%(patch)s/deepCoadd_nImage-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_tempExp: "deepCoadd/%(filter)s/%(tract)d/%(patch)s/warp-%(filter)s-%(tract)d-%(patch)s-%(visit)d-r${reqnum}p${attnum:2}.fits"
    deepCoadd_directWarp: "deepCoadd/%(filter)s/%(tract)d/%(patch)s/warp-%(filter)s-%(tract)d-%(patch)s-%(visit)d-r${reqnum}p${attnum:2}.fits"
    deepCoadd_psfMatchedWarp: "deepCoadd/%(filter)s/%(tract)d/%(patch)s/psfMatchedWarp-%(filter)s-%(tract)d-%(patch)s-%(visit)d-r${reqnum}p${attnum:2}.fits"
    deepCoadd_calexp: "deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/calexp-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_diff: "deepCoadd-diff/%(filter)s/%(tract)d/diff-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_tempExp_diff: "deepCoadd-diff/%(filter)s/%(tract)d/%(patch)s/diff-%(filter)s-%(tract)d-%(patch)s-%(visit)d-r${reqnum}p${attnum:2}.fits"
    ossImage: "%(pointing)05d/%(filter)s/thumbs/oss-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    flattenedImage: "%(pointing)05d/%(filter)s/thumbs/flattened-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
calibrations:
    bias: "BIAS/%(calibDate)s/NONE/BIAS-%(calibDate)s-%(ccd)03d.fits"
    dark: "DARK/%(calibDate)s/NONE/DARK-%(calibDate)s-%(ccd)03d.fits"
    flat: "FLAT/%(calibDate)s/%(filter)s/FLAT-%(calibDate)s-%(filter)s-%(ccd)03d.fits"
    fringe: "FRINGE/%(calibDate)s/%(filter)s/FRINGE-%(calibDate)s-%(filter)s-%(ccd)03d.fits"
    bfKernel: "BFKERNEL/brighter_fatter_kernel-$opt{calib_version}.pkl"
datasets:
    icExpBackground: "%(pointing)05d/%(filter)s/corr/ICEXPBKGD-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    calexpBackground: "%(pointing)05d/%(filter)s/corr/BKGD-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    src: "%(pointing)05d/%(filter)s/output/SRC-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    calibrated_src: "%(pointing)05d/%(filter)s/output/%(tract)04d/CALSRC-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    transformed_src: "%(pointing)05d/%(filter)s/output/TRSRC-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    icMatch: "%(pointing)05d/%(filter)s/output/MATCH-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    srcMatch: "%(pointing)05d/%(filter)s/output/SRCMATCH-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    srcMatchFull: "%(pointing)05d/%(filter)s/output/SRCMATCHFULL-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    icSrc: "%(pointing)05d/%(filter)s/output/ICSRC-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    deepCoadd_det: "deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/det-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_deblendedFlux: "deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/deblendedFlux-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_diffsrc: "deepCoadd-diff/%(filter)s/%(tract)d/diffsrc-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_tempExp_diffsrc: "deepCoadd-diff/%(filter)s/%(tract)d/%(patch)s/diffsrc-%(filter)s-%(tract)d-%(patch)s-%(visit)d-r${reqnum}p${attnum:2}.fits"
    deepCoadd_mergeDet: "deepCoadd-results/merged/%(tract)d/%(patch)s/mergeDet-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_meas: "deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/meas-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_measMatch: "deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/srcMatch-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_measMatchFull: "deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/srcMatchFull-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_calexp_background: "deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/det_bkgd-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_ref: "deepCoadd-results/merged/%(tract)d/%(patch)s/ref-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    deepCoadd_forced_src: "deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/forced_src-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.fits"
    forced_src: "%(pointing)05d/%(filter)s/tract%(tract)d/FORCEDSRC-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    ossThumb: "%(pointing)05d/%(filter)s/thumbs/oss-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    flattenedThumb: "%(pointing)05d/%(filter)s/thumbs/flattened-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    calexpThumb: "%(pointing)05d/%(filter)s/thumbs/corr-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotMagHist: "%(pointing)05d/%(filter)s/qa/magHist-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotSeeingRough: "%(pointing)05d/%(filter)s/qa/seeingRough-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotSeeingRobust: "%(pointing)05d/%(filter)s/qa/seeingRobust-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotSeeingMap: "%(pointing)05d/%(filter)s/qa/seeingMap-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotEllipseMap: "%(pointing)05d/%(filter)s/qa/ellipseMap-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotEllipticityMap: "%(pointing)05d/%(filter)s/qa/ellipticityMap-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotFwhmGrid: "%(pointing)05d/%(filter)s/qa/fwhmGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotEllipseGrid: "%(pointing)05d/%(filter)s/qa/ellipseGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotEllipticityGrid: "%(pointing)05d/%(filter)s/qa/ellipticityGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotPsfSrcGrid: "%(pointing)05d/%(filter)s/qa/psfSrcGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    plotPsfModelGrid: "%(pointing)05d/%(filter)s/qa/psfModelGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.png"
    fitsFwhmGrid: "%(pointing)05d/%(filter)s/qa/fwhmGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    fitsEllipticityGrid: "%(pointing)05d/%(filter)s/qa/ellipticityGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    fitsEllPaGrid: "%(pointing)05d/%(filter)s/qa/ellPaGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    fitsPsfSrcGrid: "%(pointing)05d/%(filter)s/qa/psfSrcGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    fitsPsfModelGrid: "%(pointing)05d/%(filter)s/qa/psfModelGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.fits"
    tableSeeingMap: "%(pointing)05d/%(filter)s/qa/seeingMap-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.txt"
    tableSeeingGrid: "%(pointing)05d/%(filter)s/qa/seeingGrid-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.txt"
    processCcd_metadata: "%(pointing)05d/%(filter)s/processCcd_metadata/processccd_md-${unitname}-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.yaml"
    deep_makeCoaddTempExp_metadata: "deep_makeCoaddTempExp_metadata/%(filter)s/%(tract)d/%(patch)s/makecoaddtempexp_md-%(filter)s-%(tract)d-%(patch)s-$opt{visit}-r${reqnum}p${attnum:2}.yaml"
    deep_safeClipAssembleCoadd_metadata: "deep_safeClipAssembleCoadd_metadata/%(filter)s/%(tract)d/%(patch)s/assemblecoadd_md-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.yaml"
    detectCoaddSources_metadata: "detectCoaddSources_metadata/%(filter)s/%(tract)d/%(patch)s/detectcoaddsources_md-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.yaml"
    measureCoaddSources_metadata: "measureCoaddSources_metadata/%(filter)s/%(tract)d/%(patch)s/measurecoaddsources_md-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.yaml"
    deepCoadd_forced_metadata: "deepCoadd_forced_metadata/%(filter)s/%(tract)d/%(patch)s/forcedphotcoadd_md-%(filter)s-%(tract)d-%(patch)s-r${reqnum}p${attnum:2}.yaml"
    forcedPhotCcd_metadata: "%(pointing)05d/%(filter)s/tract%(tract)d/forcedPhotCcd_metadata/forcedphotccd_md-%(visit)07d-%(ccd)03d-r${reqnum}p${attnum:2}.yaml"
    src_schema: "schema/schema-src-$opt{schema_version}.fits"
    icSrc_schema: "schema/schema-icSrc-$opt{schema_version}.fits"
    deepCoadd_det_schema: "schema/schema-deepCoadd_det-$opt{schema_version}.fits"
    deepCoadd_mergeDet_schema: "schema/schema-deepCoadd_mergeDet-$opt{schema_version}.fits"
    deepCoadd_peak_schema: "schema/schema-deepCoadd_peak-$opt{schema_version}.fits"
    deepCoadd_deblendedFlux_schema: "schema/schema-deepCoadd_deblendedFlux-$opt{schema_version}.fits"
    deepCoadd_deblendedModel_schema: "schema-deepCoadd_deblendedModel-$opt{schema_version}.fits"
    deepCoadd_meas_schema: "schema/schema-deepCoadd_meas-$opt{schema_version}.fits"
    deepCoadd_ref_schema: "schema/schema-deepCoadd_ref-$opt{schema_version}.fits"
    deepCoadd_forced_src_schema: "schema/schema-deepCoadd_forced_src-$opt{schema_version}.fits"
    deepCoadd_skyMap: "deepCoadd/skyMap-$opt{skymap_version}.pickle"
    processCcd_config: "config/config-processCcd-$opt{config_version}.py"
    deep_makeCoaddTempExp_config: "config/config-deep_makeCoaddTempExp-$opt{config_version}.py"
    deep_safeClipAssembleCoadd_config: "config/config-deep_safeClipAssembleCoadd-$opt{config_version}.py"
    detectCoaddSources_config: "config/config-detect-$opt{config_version}.py"
    mergeCoaddDetections_config: "config/config-mergeDetect-$opt{config_version}.py"
    deblendCoaddSources_config: "config/config-deblend-$opt{config_version}.py"
    measureCoaddSources_config: "config/config-measureMerged-$opt{config_version}.py"
    mergeCoaddMeasurements_config: "config/config-mergeMeasure-$opt{config_version}.py"
    deepCoadd_forced_config: "config/config-forcedPhotCoadd-$opt{config_version}.py"
